Spring + DB 연동
- Spring JDBC
- MyBatis
- JPA


1. 새 프로젝트
project name : MyBatisTest
Templates : Spring MVC Project
Enter a topLevelPackage : com.text.mybatis


2. 스프링/자바 버전 변경하기
- pom.xml
<properties>
		<java-version>11</java-version>
		<org.springframework-version>5.0.7.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
- 패키지 탐색기 > 우클릭 > Properties > Project Facets > Java > 11


3. 서블릿/JSP 버전 변경하기
- pom.xml
<dependency>
	<groupId>javax.servlet</groupId>
	<artifactId>javax.servlet-api</artifactId>
	<version>3.1.0</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>javax.servlet.jsp</groupId>
	<artifactId>javax.servlet.jsp-api</artifactId>
	<version>2.3.3</version>
	<scope>provided</scope>
</dependency>
	

4. jUnit
- pom.xml
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.12</version>
	<scope>test</scope>
</dependency> 
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-test</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
	
		
5. Lombok
- pom.xml
<dependency>
	<groupId>org.projectlombok</groupId>
	<artifactId>lombok</artifactId>
	<version>1.18.30</version>
	<scope>provided</scope>
</dependency> 


6. Mybatis 의존성 추가
<dependency>
	<groupId>org.mybatis</groupId>
	<artifactId>mybatis</artifactId>
	<version>3.5.2</version>
</dependency>
<dependency>
	<groupId>org.mybatis</groupId>
	<artifactId>mybatis-spring</artifactId>
	<version>1.3.2</version>
</dependency>

<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-tx</artifactId>
	<version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-jdbc</artifactId>
	<version>${org.springframework-version}</version>
</dependency>


ojdbc8.jar
- 직접 참조


- Mybatis > 라이브러리(O)
- Mybatis > 설정(X)
- JDBC > 라이브러리 + 설정(O)


JDBC 연결 테스트
- src/test/java > "com.test.mybatis.persistence" > "JDBCTest.java"



Connection Pool, 커넥션 풀
- Commons DBCP
- HikariCP > 스프링 부트 2.X부터 기본 적용


Common DBCP
- pom.xml > commons-dbcp 의존성 추가
- root-context.xml > 설정 추가

com.test.mybatis.persistence > "DBCPTest.java"


HikariCP
- pom.xml > 의존성 추가
- root-context.xml > 설정 추가

MyBatis 설정
- pom.xml > 의존성 추가(4개)
- root-context.xml > 설정 추가



MyBatis(iBatis)
- 영속성 계층(데이터베이스 조작 계층)
- JDBC 역할
- SQL Mapping Framework(***) > SQL의 실행 결과를 객체지향으로 '매핑'해준다.
- JDBC > 생산성 향상, 유지보수 향상
- SQL 분리(***) > 기존 방식(SQL > 문자열) > Mybatis 방식(XML로 분리)

MyBatis를 스프링에 적용하는 방법
1. XML 매퍼를 사용하는 방법
2. 인터페이스 매퍼를 사용하는 방법





Log4j 설정
- pom.xml > 버전 수정, 의존성 1개 추가
- src/main/resources > log4jdbc.log4j2.properties
- log4j.xml > 일부 수정
- root-context.xml > 일부 수정


=========================설정 끝==========================

MyBatis 사용 + SQL 실행

- "com.test.mybatis.controller" > "MyBatisController.java"

- "com.test.mybatis.dao" > "MyBatisDAO.java"(I)
						 > "MyBatisDAOImpl.java"(C)
						 
- "com.test.mybatis.dto" > "MyBatisDTO.java"

- src/main/resource > mapper > "mybatis.xml"
- src/main/resource > config > "mybatis-config.xml"

- views > "list.jsp"
		> "add.jsp"
		> "addok.jsp"
		> "result.jsp"
		
- MyBatisTest > "script.spl"







































